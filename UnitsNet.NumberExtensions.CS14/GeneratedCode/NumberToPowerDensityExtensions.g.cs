//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#if NET7_0_OR_GREATER
using System.Numerics;
#endif

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToPowerDensity
{
    /// <summary>
    /// A number to PowerDensity Extensions
    /// </summary>
    public static class NumberToPowerDensityExtensions
    {
#pragma warning disable CS1591
        extension<T>(T value)
#pragma warning restore CS1591
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#else
            , IConvertible
#endif
        {
            /// <inheritdoc cref="PowerDensity.FromDecawattsPerCubicFoot(QuantityValue)" />
            public PowerDensity DecawattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromDecawattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromDecawattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromDecawattsPerCubicInch(QuantityValue)" />
            public PowerDensity DecawattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromDecawattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromDecawattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromDecawattsPerCubicMeter(QuantityValue)" />
            public PowerDensity DecawattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromDecawattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromDecawattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromDecawattsPerLiter(QuantityValue)" />
            public PowerDensity DecawattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromDecawattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromDecawattsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromDeciwattsPerCubicFoot(QuantityValue)" />
            public PowerDensity DeciwattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromDeciwattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromDeciwattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromDeciwattsPerCubicInch(QuantityValue)" />
            public PowerDensity DeciwattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromDeciwattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromDeciwattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromDeciwattsPerCubicMeter(QuantityValue)" />
            public PowerDensity DeciwattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromDeciwattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromDeciwattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromDeciwattsPerLiter(QuantityValue)" />
            public PowerDensity DeciwattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromDeciwattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromDeciwattsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromGigawattsPerCubicFoot(QuantityValue)" />
            public PowerDensity GigawattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromGigawattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromGigawattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromGigawattsPerCubicInch(QuantityValue)" />
            public PowerDensity GigawattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromGigawattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromGigawattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromGigawattsPerCubicMeter(QuantityValue)" />
            public PowerDensity GigawattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromGigawattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromGigawattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromGigawattsPerLiter(QuantityValue)" />
            public PowerDensity GigawattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromGigawattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromGigawattsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromKilowattsPerCubicFoot(QuantityValue)" />
            public PowerDensity KilowattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromKilowattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromKilowattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromKilowattsPerCubicInch(QuantityValue)" />
            public PowerDensity KilowattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromKilowattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromKilowattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromKilowattsPerCubicMeter(QuantityValue)" />
            public PowerDensity KilowattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromKilowattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromKilowattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromKilowattsPerLiter(QuantityValue)" />
            public PowerDensity KilowattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromKilowattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromKilowattsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMegawattsPerCubicFoot(QuantityValue)" />
            public PowerDensity MegawattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromMegawattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMegawattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMegawattsPerCubicInch(QuantityValue)" />
            public PowerDensity MegawattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromMegawattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMegawattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMegawattsPerCubicMeter(QuantityValue)" />
            public PowerDensity MegawattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromMegawattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMegawattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMegawattsPerLiter(QuantityValue)" />
            public PowerDensity MegawattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromMegawattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMegawattsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMicrowattsPerCubicFoot(QuantityValue)" />
            public PowerDensity MicrowattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromMicrowattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMicrowattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMicrowattsPerCubicInch(QuantityValue)" />
            public PowerDensity MicrowattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromMicrowattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMicrowattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMicrowattsPerCubicMeter(QuantityValue)" />
            public PowerDensity MicrowattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromMicrowattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMicrowattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMicrowattsPerLiter(QuantityValue)" />
            public PowerDensity MicrowattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromMicrowattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMicrowattsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMilliwattsPerCubicFoot(QuantityValue)" />
            public PowerDensity MilliwattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromMilliwattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMilliwattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMilliwattsPerCubicInch(QuantityValue)" />
            public PowerDensity MilliwattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromMilliwattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMilliwattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMilliwattsPerCubicMeter(QuantityValue)" />
            public PowerDensity MilliwattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromMilliwattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMilliwattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromMilliwattsPerLiter(QuantityValue)" />
            public PowerDensity MilliwattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromMilliwattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromMilliwattsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromNanowattsPerCubicFoot(QuantityValue)" />
            public PowerDensity NanowattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromNanowattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromNanowattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromNanowattsPerCubicInch(QuantityValue)" />
            public PowerDensity NanowattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromNanowattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromNanowattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromNanowattsPerCubicMeter(QuantityValue)" />
            public PowerDensity NanowattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromNanowattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromNanowattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromNanowattsPerLiter(QuantityValue)" />
            public PowerDensity NanowattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromNanowattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromNanowattsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromPicowattsPerCubicFoot(QuantityValue)" />
            public PowerDensity PicowattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromPicowattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromPicowattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromPicowattsPerCubicInch(QuantityValue)" />
            public PowerDensity PicowattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromPicowattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromPicowattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromPicowattsPerCubicMeter(QuantityValue)" />
            public PowerDensity PicowattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromPicowattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromPicowattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromPicowattsPerLiter(QuantityValue)" />
            public PowerDensity PicowattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromPicowattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromPicowattsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromTerawattsPerCubicFoot(QuantityValue)" />
            public PowerDensity TerawattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromTerawattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromTerawattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromTerawattsPerCubicInch(QuantityValue)" />
            public PowerDensity TerawattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromTerawattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromTerawattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromTerawattsPerCubicMeter(QuantityValue)" />
            public PowerDensity TerawattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromTerawattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromTerawattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromTerawattsPerLiter(QuantityValue)" />
            public PowerDensity TerawattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromTerawattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromTerawattsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromWattsPerCubicFoot(QuantityValue)" />
            public PowerDensity WattsPerCubicFoot
#if NET7_0_OR_GREATER
                => PowerDensity.FromWattsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromWattsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromWattsPerCubicInch(QuantityValue)" />
            public PowerDensity WattsPerCubicInch
#if NET7_0_OR_GREATER
                => PowerDensity.FromWattsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromWattsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromWattsPerCubicMeter(QuantityValue)" />
            public PowerDensity WattsPerCubicMeter
#if NET7_0_OR_GREATER
                => PowerDensity.FromWattsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromWattsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="PowerDensity.FromWattsPerLiter(QuantityValue)" />
            public PowerDensity WattsPerLiter
#if NET7_0_OR_GREATER
                => PowerDensity.FromWattsPerLiter(QuantityValue.CreateChecked(value));
#else
                => PowerDensity.FromWattsPerLiter(value.ToQuantityValue());
#endif

        }
    }
}
