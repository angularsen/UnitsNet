//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.NumberExtensions.NumberToPowerDensity;
using Xunit;

namespace UnitsNet.Tests
{
    public class NumberToPowerDensityExtensionsTests
    {
        [Fact]
        public void NumberToDecawattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromDecawattsPerCubicFoot(2), 2.DecawattsPerCubicFoot);

        [Fact]
        public void NumberToDecawattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromDecawattsPerCubicInch(2), 2.DecawattsPerCubicInch);

        [Fact]
        public void NumberToDecawattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromDecawattsPerCubicMeter(2), 2.DecawattsPerCubicMeter);

        [Fact]
        public void NumberToDecawattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromDecawattsPerLiter(2), 2.DecawattsPerLiter);

        [Fact]
        public void NumberToDeciwattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromDeciwattsPerCubicFoot(2), 2.DeciwattsPerCubicFoot);

        [Fact]
        public void NumberToDeciwattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromDeciwattsPerCubicInch(2), 2.DeciwattsPerCubicInch);

        [Fact]
        public void NumberToDeciwattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromDeciwattsPerCubicMeter(2), 2.DeciwattsPerCubicMeter);

        [Fact]
        public void NumberToDeciwattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromDeciwattsPerLiter(2), 2.DeciwattsPerLiter);

        [Fact]
        public void NumberToGigawattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromGigawattsPerCubicFoot(2), 2.GigawattsPerCubicFoot);

        [Fact]
        public void NumberToGigawattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromGigawattsPerCubicInch(2), 2.GigawattsPerCubicInch);

        [Fact]
        public void NumberToGigawattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromGigawattsPerCubicMeter(2), 2.GigawattsPerCubicMeter);

        [Fact]
        public void NumberToGigawattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromGigawattsPerLiter(2), 2.GigawattsPerLiter);

        [Fact]
        public void NumberToKilowattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromKilowattsPerCubicFoot(2), 2.KilowattsPerCubicFoot);

        [Fact]
        public void NumberToKilowattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromKilowattsPerCubicInch(2), 2.KilowattsPerCubicInch);

        [Fact]
        public void NumberToKilowattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromKilowattsPerCubicMeter(2), 2.KilowattsPerCubicMeter);

        [Fact]
        public void NumberToKilowattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromKilowattsPerLiter(2), 2.KilowattsPerLiter);

        [Fact]
        public void NumberToMegawattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromMegawattsPerCubicFoot(2), 2.MegawattsPerCubicFoot);

        [Fact]
        public void NumberToMegawattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromMegawattsPerCubicInch(2), 2.MegawattsPerCubicInch);

        [Fact]
        public void NumberToMegawattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromMegawattsPerCubicMeter(2), 2.MegawattsPerCubicMeter);

        [Fact]
        public void NumberToMegawattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromMegawattsPerLiter(2), 2.MegawattsPerLiter);

        [Fact]
        public void NumberToMicrowattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromMicrowattsPerCubicFoot(2), 2.MicrowattsPerCubicFoot);

        [Fact]
        public void NumberToMicrowattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromMicrowattsPerCubicInch(2), 2.MicrowattsPerCubicInch);

        [Fact]
        public void NumberToMicrowattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromMicrowattsPerCubicMeter(2), 2.MicrowattsPerCubicMeter);

        [Fact]
        public void NumberToMicrowattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromMicrowattsPerLiter(2), 2.MicrowattsPerLiter);

        [Fact]
        public void NumberToMilliwattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromMilliwattsPerCubicFoot(2), 2.MilliwattsPerCubicFoot);

        [Fact]
        public void NumberToMilliwattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromMilliwattsPerCubicInch(2), 2.MilliwattsPerCubicInch);

        [Fact]
        public void NumberToMilliwattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromMilliwattsPerCubicMeter(2), 2.MilliwattsPerCubicMeter);

        [Fact]
        public void NumberToMilliwattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromMilliwattsPerLiter(2), 2.MilliwattsPerLiter);

        [Fact]
        public void NumberToNanowattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromNanowattsPerCubicFoot(2), 2.NanowattsPerCubicFoot);

        [Fact]
        public void NumberToNanowattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromNanowattsPerCubicInch(2), 2.NanowattsPerCubicInch);

        [Fact]
        public void NumberToNanowattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromNanowattsPerCubicMeter(2), 2.NanowattsPerCubicMeter);

        [Fact]
        public void NumberToNanowattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromNanowattsPerLiter(2), 2.NanowattsPerLiter);

        [Fact]
        public void NumberToPicowattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromPicowattsPerCubicFoot(2), 2.PicowattsPerCubicFoot);

        [Fact]
        public void NumberToPicowattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromPicowattsPerCubicInch(2), 2.PicowattsPerCubicInch);

        [Fact]
        public void NumberToPicowattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromPicowattsPerCubicMeter(2), 2.PicowattsPerCubicMeter);

        [Fact]
        public void NumberToPicowattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromPicowattsPerLiter(2), 2.PicowattsPerLiter);

        [Fact]
        public void NumberToTerawattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromTerawattsPerCubicFoot(2), 2.TerawattsPerCubicFoot);

        [Fact]
        public void NumberToTerawattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromTerawattsPerCubicInch(2), 2.TerawattsPerCubicInch);

        [Fact]
        public void NumberToTerawattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromTerawattsPerCubicMeter(2), 2.TerawattsPerCubicMeter);

        [Fact]
        public void NumberToTerawattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromTerawattsPerLiter(2), 2.TerawattsPerLiter);

        [Fact]
        public void NumberToWattsPerCubicFootTest() =>
            Assert.Equal(PowerDensity.FromWattsPerCubicFoot(2), 2.WattsPerCubicFoot);

        [Fact]
        public void NumberToWattsPerCubicInchTest() =>
            Assert.Equal(PowerDensity.FromWattsPerCubicInch(2), 2.WattsPerCubicInch);

        [Fact]
        public void NumberToWattsPerCubicMeterTest() =>
            Assert.Equal(PowerDensity.FromWattsPerCubicMeter(2), 2.WattsPerCubicMeter);

        [Fact]
        public void NumberToWattsPerLiterTest() =>
            Assert.Equal(PowerDensity.FromWattsPerLiter(2), 2.WattsPerLiter);

    }
}
