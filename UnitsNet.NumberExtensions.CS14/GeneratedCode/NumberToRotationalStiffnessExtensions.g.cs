//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#if NET7_0_OR_GREATER
using System.Numerics;
#endif

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToRotationalStiffness
{
    /// <summary>
    /// A number to RotationalStiffness Extensions
    /// </summary>
    public static class NumberToRotationalStiffnessExtensions
    {
        extension<T>(T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#else
            , IConvertible
#endif
        {
            /// <inheritdoc cref="RotationalStiffness.FromCentinewtonMetersPerDegree(double)" />
            public RotationalStiffness CentinewtonMetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromCentinewtonMetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromCentinewtonMetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromCentinewtonMillimetersPerDegree(double)" />
            public RotationalStiffness CentinewtonMillimetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromCentinewtonMillimetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromCentinewtonMillimetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromCentinewtonMillimetersPerRadian(double)" />
            public RotationalStiffness CentinewtonMillimetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromCentinewtonMillimetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromCentinewtonMillimetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromDecanewtonMetersPerDegree(double)" />
            public RotationalStiffness DecanewtonMetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromDecanewtonMetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromDecanewtonMetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromDecanewtonMillimetersPerDegree(double)" />
            public RotationalStiffness DecanewtonMillimetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromDecanewtonMillimetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromDecanewtonMillimetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromDecanewtonMillimetersPerRadian(double)" />
            public RotationalStiffness DecanewtonMillimetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromDecanewtonMillimetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromDecanewtonMillimetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromDecinewtonMetersPerDegree(double)" />
            public RotationalStiffness DecinewtonMetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromDecinewtonMetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromDecinewtonMetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromDecinewtonMillimetersPerDegree(double)" />
            public RotationalStiffness DecinewtonMillimetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromDecinewtonMillimetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromDecinewtonMillimetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromDecinewtonMillimetersPerRadian(double)" />
            public RotationalStiffness DecinewtonMillimetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromDecinewtonMillimetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromDecinewtonMillimetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromKilonewtonMetersPerDegree(double)" />
            public RotationalStiffness KilonewtonMetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromKilonewtonMetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromKilonewtonMetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromKilonewtonMetersPerRadian(double)" />
            public RotationalStiffness KilonewtonMetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromKilonewtonMetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromKilonewtonMetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromKilonewtonMillimetersPerDegree(double)" />
            public RotationalStiffness KilonewtonMillimetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromKilonewtonMillimetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromKilonewtonMillimetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromKilonewtonMillimetersPerRadian(double)" />
            public RotationalStiffness KilonewtonMillimetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromKilonewtonMillimetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromKilonewtonMillimetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromKilopoundForceFeetPerDegrees(double)" />
            public RotationalStiffness KilopoundForceFeetPerDegrees
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromKilopoundForceFeetPerDegrees(double.CreateChecked(value));
#else
                => RotationalStiffness.FromKilopoundForceFeetPerDegrees(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromMeganewtonMetersPerDegree(double)" />
            public RotationalStiffness MeganewtonMetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromMeganewtonMetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromMeganewtonMetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromMeganewtonMetersPerRadian(double)" />
            public RotationalStiffness MeganewtonMetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromMeganewtonMetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromMeganewtonMetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromMeganewtonMillimetersPerDegree(double)" />
            public RotationalStiffness MeganewtonMillimetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromMeganewtonMillimetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromMeganewtonMillimetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromMeganewtonMillimetersPerRadian(double)" />
            public RotationalStiffness MeganewtonMillimetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromMeganewtonMillimetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromMeganewtonMillimetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromMicronewtonMetersPerDegree(double)" />
            public RotationalStiffness MicronewtonMetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromMicronewtonMetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromMicronewtonMetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromMicronewtonMillimetersPerDegree(double)" />
            public RotationalStiffness MicronewtonMillimetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromMicronewtonMillimetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromMicronewtonMillimetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromMicronewtonMillimetersPerRadian(double)" />
            public RotationalStiffness MicronewtonMillimetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromMicronewtonMillimetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromMicronewtonMillimetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromMillinewtonMetersPerDegree(double)" />
            public RotationalStiffness MillinewtonMetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromMillinewtonMetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromMillinewtonMetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromMillinewtonMillimetersPerDegree(double)" />
            public RotationalStiffness MillinewtonMillimetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromMillinewtonMillimetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromMillinewtonMillimetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromMillinewtonMillimetersPerRadian(double)" />
            public RotationalStiffness MillinewtonMillimetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromMillinewtonMillimetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromMillinewtonMillimetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromNanonewtonMetersPerDegree(double)" />
            public RotationalStiffness NanonewtonMetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromNanonewtonMetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromNanonewtonMetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromNanonewtonMillimetersPerDegree(double)" />
            public RotationalStiffness NanonewtonMillimetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromNanonewtonMillimetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromNanonewtonMillimetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromNanonewtonMillimetersPerRadian(double)" />
            public RotationalStiffness NanonewtonMillimetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromNanonewtonMillimetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromNanonewtonMillimetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromNewtonMetersPerDegree(double)" />
            public RotationalStiffness NewtonMetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromNewtonMetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromNewtonMetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromNewtonMetersPerRadian(double)" />
            public RotationalStiffness NewtonMetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromNewtonMetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromNewtonMetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromNewtonMillimetersPerDegree(double)" />
            public RotationalStiffness NewtonMillimetersPerDegree
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromNewtonMillimetersPerDegree(double.CreateChecked(value));
#else
                => RotationalStiffness.FromNewtonMillimetersPerDegree(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromNewtonMillimetersPerRadian(double)" />
            public RotationalStiffness NewtonMillimetersPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromNewtonMillimetersPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromNewtonMillimetersPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromPoundForceFeetPerRadian(double)" />
            public RotationalStiffness PoundForceFeetPerRadian
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromPoundForceFeetPerRadian(double.CreateChecked(value));
#else
                => RotationalStiffness.FromPoundForceFeetPerRadian(value.ToDouble(null));
#endif

            /// <inheritdoc cref="RotationalStiffness.FromPoundForceFeetPerDegrees(double)" />
            public RotationalStiffness PoundForceFeetPerDegrees
#if NET7_0_OR_GREATER
                => RotationalStiffness.FromPoundForceFeetPerDegrees(double.CreateChecked(value));
#else
                => RotationalStiffness.FromPoundForceFeetPerDegrees(value.ToDouble(null));
#endif

        }
    }
}
