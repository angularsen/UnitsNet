//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.NumberExtensions.NumberToElectricPotentialChangeRate;
using Xunit;

namespace UnitsNet.Tests
{
    public class NumberToElectricPotentialChangeRateExtensionsTests
    {
        [Fact]
        public void NumberToKilovoltsPerHourTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromKilovoltsPerHour(2), 2.KilovoltsPerHour);

        [Fact]
        public void NumberToKilovoltsPerMicrosecondTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromKilovoltsPerMicrosecond(2), 2.KilovoltsPerMicrosecond);

        [Fact]
        public void NumberToKilovoltsPerMinuteTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromKilovoltsPerMinute(2), 2.KilovoltsPerMinute);

        [Fact]
        public void NumberToKilovoltsPerSecondTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromKilovoltsPerSecond(2), 2.KilovoltsPerSecond);

        [Fact]
        public void NumberToMegavoltsPerHourTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMegavoltsPerHour(2), 2.MegavoltsPerHour);

        [Fact]
        public void NumberToMegavoltsPerMicrosecondTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMegavoltsPerMicrosecond(2), 2.MegavoltsPerMicrosecond);

        [Fact]
        public void NumberToMegavoltsPerMinuteTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMegavoltsPerMinute(2), 2.MegavoltsPerMinute);

        [Fact]
        public void NumberToMegavoltsPerSecondTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMegavoltsPerSecond(2), 2.MegavoltsPerSecond);

        [Fact]
        public void NumberToMicrovoltsPerHourTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMicrovoltsPerHour(2), 2.MicrovoltsPerHour);

        [Fact]
        public void NumberToMicrovoltsPerMicrosecondTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMicrovoltsPerMicrosecond(2), 2.MicrovoltsPerMicrosecond);

        [Fact]
        public void NumberToMicrovoltsPerMinuteTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMicrovoltsPerMinute(2), 2.MicrovoltsPerMinute);

        [Fact]
        public void NumberToMicrovoltsPerSecondTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMicrovoltsPerSecond(2), 2.MicrovoltsPerSecond);

        [Fact]
        public void NumberToMillivoltsPerHourTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMillivoltsPerHour(2), 2.MillivoltsPerHour);

        [Fact]
        public void NumberToMillivoltsPerMicrosecondTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMillivoltsPerMicrosecond(2), 2.MillivoltsPerMicrosecond);

        [Fact]
        public void NumberToMillivoltsPerMinuteTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMillivoltsPerMinute(2), 2.MillivoltsPerMinute);

        [Fact]
        public void NumberToMillivoltsPerSecondTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromMillivoltsPerSecond(2), 2.MillivoltsPerSecond);

        [Fact]
        public void NumberToVoltsPerHourTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromVoltsPerHour(2), 2.VoltsPerHour);

        [Fact]
        public void NumberToVoltsPerMicrosecondTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromVoltsPerMicrosecond(2), 2.VoltsPerMicrosecond);

        [Fact]
        public void NumberToVoltsPerMinuteTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromVoltsPerMinute(2), 2.VoltsPerMinute);

        [Fact]
        public void NumberToVoltsPerSecondTest() =>
            Assert.Equal(ElectricPotentialChangeRate.FromVoltsPerSecond(2), 2.VoltsPerSecond);

    }
}
