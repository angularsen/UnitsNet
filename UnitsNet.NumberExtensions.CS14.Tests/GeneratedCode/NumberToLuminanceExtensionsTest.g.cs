//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.NumberExtensions.NumberToLuminance;
using Xunit;

namespace UnitsNet.Tests
{
    public class NumberToLuminanceExtensionsTests
    {
        [Fact]
        public void NumberToCandelasPerSquareFootTest() =>
            Assert.Equal(Luminance.FromCandelasPerSquareFoot(2), 2.CandelasPerSquareFoot);

        [Fact]
        public void NumberToCandelasPerSquareInchTest() =>
            Assert.Equal(Luminance.FromCandelasPerSquareInch(2), 2.CandelasPerSquareInch);

        [Fact]
        public void NumberToCandelasPerSquareMeterTest() =>
            Assert.Equal(Luminance.FromCandelasPerSquareMeter(2), 2.CandelasPerSquareMeter);

        [Fact]
        public void NumberToCenticandelasPerSquareMeterTest() =>
            Assert.Equal(Luminance.FromCenticandelasPerSquareMeter(2), 2.CenticandelasPerSquareMeter);

        [Fact]
        public void NumberToDecicandelasPerSquareMeterTest() =>
            Assert.Equal(Luminance.FromDecicandelasPerSquareMeter(2), 2.DecicandelasPerSquareMeter);

        [Fact]
        public void NumberToKilocandelasPerSquareMeterTest() =>
            Assert.Equal(Luminance.FromKilocandelasPerSquareMeter(2), 2.KilocandelasPerSquareMeter);

        [Fact]
        public void NumberToMicrocandelasPerSquareMeterTest() =>
            Assert.Equal(Luminance.FromMicrocandelasPerSquareMeter(2), 2.MicrocandelasPerSquareMeter);

        [Fact]
        public void NumberToMillicandelasPerSquareMeterTest() =>
            Assert.Equal(Luminance.FromMillicandelasPerSquareMeter(2), 2.MillicandelasPerSquareMeter);

        [Fact]
        public void NumberToNanocandelasPerSquareMeterTest() =>
            Assert.Equal(Luminance.FromNanocandelasPerSquareMeter(2), 2.NanocandelasPerSquareMeter);

        [Fact]
        public void NumberToNitsTest() =>
            Assert.Equal(Luminance.FromNits(2), 2.Nits);

    }
}
