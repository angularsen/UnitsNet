//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#if NET7_0_OR_GREATER
using System.Numerics;
#endif

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToPressure
{
    /// <summary>
    /// A number to Pressure Extensions
    /// </summary>
    public static class NumberToPressureExtensions
    {
        extension<T>(T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#else
            , IConvertible
#endif
        {
            /// <inheritdoc cref="Pressure.FromAtmospheres(double)" />
            public Pressure Atmospheres
#if NET7_0_OR_GREATER
                => Pressure.FromAtmospheres(double.CreateChecked(value));
#else
                => Pressure.FromAtmospheres(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromBars(double)" />
            public Pressure Bars
#if NET7_0_OR_GREATER
                => Pressure.FromBars(double.CreateChecked(value));
#else
                => Pressure.FromBars(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromCentibars(double)" />
            public Pressure Centibars
#if NET7_0_OR_GREATER
                => Pressure.FromCentibars(double.CreateChecked(value));
#else
                => Pressure.FromCentibars(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromCentimetersOfWaterColumn(double)" />
            public Pressure CentimetersOfWaterColumn
#if NET7_0_OR_GREATER
                => Pressure.FromCentimetersOfWaterColumn(double.CreateChecked(value));
#else
                => Pressure.FromCentimetersOfWaterColumn(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromDecapascals(double)" />
            public Pressure Decapascals
#if NET7_0_OR_GREATER
                => Pressure.FromDecapascals(double.CreateChecked(value));
#else
                => Pressure.FromDecapascals(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromDecibars(double)" />
            public Pressure Decibars
#if NET7_0_OR_GREATER
                => Pressure.FromDecibars(double.CreateChecked(value));
#else
                => Pressure.FromDecibars(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromDynesPerSquareCentimeter(double)" />
            public Pressure DynesPerSquareCentimeter
#if NET7_0_OR_GREATER
                => Pressure.FromDynesPerSquareCentimeter(double.CreateChecked(value));
#else
                => Pressure.FromDynesPerSquareCentimeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromFeetOfHead(double)" />
            public Pressure FeetOfHead
#if NET7_0_OR_GREATER
                => Pressure.FromFeetOfHead(double.CreateChecked(value));
#else
                => Pressure.FromFeetOfHead(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromGigapascals(double)" />
            public Pressure Gigapascals
#if NET7_0_OR_GREATER
                => Pressure.FromGigapascals(double.CreateChecked(value));
#else
                => Pressure.FromGigapascals(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromHectopascals(double)" />
            public Pressure Hectopascals
#if NET7_0_OR_GREATER
                => Pressure.FromHectopascals(double.CreateChecked(value));
#else
                => Pressure.FromHectopascals(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromInchesOfMercury(double)" />
            public Pressure InchesOfMercury
#if NET7_0_OR_GREATER
                => Pressure.FromInchesOfMercury(double.CreateChecked(value));
#else
                => Pressure.FromInchesOfMercury(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromInchesOfWaterColumn(double)" />
            public Pressure InchesOfWaterColumn
#if NET7_0_OR_GREATER
                => Pressure.FromInchesOfWaterColumn(double.CreateChecked(value));
#else
                => Pressure.FromInchesOfWaterColumn(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilobars(double)" />
            public Pressure Kilobars
#if NET7_0_OR_GREATER
                => Pressure.FromKilobars(double.CreateChecked(value));
#else
                => Pressure.FromKilobars(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilogramsForcePerSquareCentimeter(double)" />
            public Pressure KilogramsForcePerSquareCentimeter
#if NET7_0_OR_GREATER
                => Pressure.FromKilogramsForcePerSquareCentimeter(double.CreateChecked(value));
#else
                => Pressure.FromKilogramsForcePerSquareCentimeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilogramsForcePerSquareMeter(double)" />
            public Pressure KilogramsForcePerSquareMeter
#if NET7_0_OR_GREATER
                => Pressure.FromKilogramsForcePerSquareMeter(double.CreateChecked(value));
#else
                => Pressure.FromKilogramsForcePerSquareMeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilogramsForcePerSquareMillimeter(double)" />
            public Pressure KilogramsForcePerSquareMillimeter
#if NET7_0_OR_GREATER
                => Pressure.FromKilogramsForcePerSquareMillimeter(double.CreateChecked(value));
#else
                => Pressure.FromKilogramsForcePerSquareMillimeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilonewtonsPerSquareCentimeter(double)" />
            public Pressure KilonewtonsPerSquareCentimeter
#if NET7_0_OR_GREATER
                => Pressure.FromKilonewtonsPerSquareCentimeter(double.CreateChecked(value));
#else
                => Pressure.FromKilonewtonsPerSquareCentimeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilonewtonsPerSquareMeter(double)" />
            public Pressure KilonewtonsPerSquareMeter
#if NET7_0_OR_GREATER
                => Pressure.FromKilonewtonsPerSquareMeter(double.CreateChecked(value));
#else
                => Pressure.FromKilonewtonsPerSquareMeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilonewtonsPerSquareMillimeter(double)" />
            public Pressure KilonewtonsPerSquareMillimeter
#if NET7_0_OR_GREATER
                => Pressure.FromKilonewtonsPerSquareMillimeter(double.CreateChecked(value));
#else
                => Pressure.FromKilonewtonsPerSquareMillimeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilopascals(double)" />
            public Pressure Kilopascals
#if NET7_0_OR_GREATER
                => Pressure.FromKilopascals(double.CreateChecked(value));
#else
                => Pressure.FromKilopascals(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilopoundsForcePerSquareFoot(double)" />
            public Pressure KilopoundsForcePerSquareFoot
#if NET7_0_OR_GREATER
                => Pressure.FromKilopoundsForcePerSquareFoot(double.CreateChecked(value));
#else
                => Pressure.FromKilopoundsForcePerSquareFoot(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilopoundsForcePerSquareInch(double)" />
            public Pressure KilopoundsForcePerSquareInch
#if NET7_0_OR_GREATER
                => Pressure.FromKilopoundsForcePerSquareInch(double.CreateChecked(value));
#else
                => Pressure.FromKilopoundsForcePerSquareInch(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromKilopoundsForcePerSquareMil(double)" />
            public Pressure KilopoundsForcePerSquareMil
#if NET7_0_OR_GREATER
                => Pressure.FromKilopoundsForcePerSquareMil(double.CreateChecked(value));
#else
                => Pressure.FromKilopoundsForcePerSquareMil(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMegabars(double)" />
            public Pressure Megabars
#if NET7_0_OR_GREATER
                => Pressure.FromMegabars(double.CreateChecked(value));
#else
                => Pressure.FromMegabars(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMeganewtonsPerSquareMeter(double)" />
            public Pressure MeganewtonsPerSquareMeter
#if NET7_0_OR_GREATER
                => Pressure.FromMeganewtonsPerSquareMeter(double.CreateChecked(value));
#else
                => Pressure.FromMeganewtonsPerSquareMeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMegapascals(double)" />
            public Pressure Megapascals
#if NET7_0_OR_GREATER
                => Pressure.FromMegapascals(double.CreateChecked(value));
#else
                => Pressure.FromMegapascals(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMetersOfHead(double)" />
            public Pressure MetersOfHead
#if NET7_0_OR_GREATER
                => Pressure.FromMetersOfHead(double.CreateChecked(value));
#else
                => Pressure.FromMetersOfHead(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMetersOfWaterColumn(double)" />
            public Pressure MetersOfWaterColumn
#if NET7_0_OR_GREATER
                => Pressure.FromMetersOfWaterColumn(double.CreateChecked(value));
#else
                => Pressure.FromMetersOfWaterColumn(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMicrobars(double)" />
            public Pressure Microbars
#if NET7_0_OR_GREATER
                => Pressure.FromMicrobars(double.CreateChecked(value));
#else
                => Pressure.FromMicrobars(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMicropascals(double)" />
            public Pressure Micropascals
#if NET7_0_OR_GREATER
                => Pressure.FromMicropascals(double.CreateChecked(value));
#else
                => Pressure.FromMicropascals(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMillibars(double)" />
            public Pressure Millibars
#if NET7_0_OR_GREATER
                => Pressure.FromMillibars(double.CreateChecked(value));
#else
                => Pressure.FromMillibars(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMillimetersOfMercury(double)" />
            public Pressure MillimetersOfMercury
#if NET7_0_OR_GREATER
                => Pressure.FromMillimetersOfMercury(double.CreateChecked(value));
#else
                => Pressure.FromMillimetersOfMercury(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMillimetersOfWaterColumn(double)" />
            public Pressure MillimetersOfWaterColumn
#if NET7_0_OR_GREATER
                => Pressure.FromMillimetersOfWaterColumn(double.CreateChecked(value));
#else
                => Pressure.FromMillimetersOfWaterColumn(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMillipascals(double)" />
            public Pressure Millipascals
#if NET7_0_OR_GREATER
                => Pressure.FromMillipascals(double.CreateChecked(value));
#else
                => Pressure.FromMillipascals(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromMillitorrs(double)" />
            public Pressure Millitorrs
#if NET7_0_OR_GREATER
                => Pressure.FromMillitorrs(double.CreateChecked(value));
#else
                => Pressure.FromMillitorrs(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromNewtonsPerSquareCentimeter(double)" />
            public Pressure NewtonsPerSquareCentimeter
#if NET7_0_OR_GREATER
                => Pressure.FromNewtonsPerSquareCentimeter(double.CreateChecked(value));
#else
                => Pressure.FromNewtonsPerSquareCentimeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromNewtonsPerSquareMeter(double)" />
            public Pressure NewtonsPerSquareMeter
#if NET7_0_OR_GREATER
                => Pressure.FromNewtonsPerSquareMeter(double.CreateChecked(value));
#else
                => Pressure.FromNewtonsPerSquareMeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromNewtonsPerSquareMillimeter(double)" />
            public Pressure NewtonsPerSquareMillimeter
#if NET7_0_OR_GREATER
                => Pressure.FromNewtonsPerSquareMillimeter(double.CreateChecked(value));
#else
                => Pressure.FromNewtonsPerSquareMillimeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromPascals(double)" />
            public Pressure Pascals
#if NET7_0_OR_GREATER
                => Pressure.FromPascals(double.CreateChecked(value));
#else
                => Pressure.FromPascals(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromPoundsForcePerSquareFoot(double)" />
            public Pressure PoundsForcePerSquareFoot
#if NET7_0_OR_GREATER
                => Pressure.FromPoundsForcePerSquareFoot(double.CreateChecked(value));
#else
                => Pressure.FromPoundsForcePerSquareFoot(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromPoundsForcePerSquareInch(double)" />
            public Pressure PoundsForcePerSquareInch
#if NET7_0_OR_GREATER
                => Pressure.FromPoundsForcePerSquareInch(double.CreateChecked(value));
#else
                => Pressure.FromPoundsForcePerSquareInch(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromPoundsForcePerSquareMil(double)" />
            public Pressure PoundsForcePerSquareMil
#if NET7_0_OR_GREATER
                => Pressure.FromPoundsForcePerSquareMil(double.CreateChecked(value));
#else
                => Pressure.FromPoundsForcePerSquareMil(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromPoundsPerInchSecondSquared(double)" />
            public Pressure PoundsPerInchSecondSquared
#if NET7_0_OR_GREATER
                => Pressure.FromPoundsPerInchSecondSquared(double.CreateChecked(value));
#else
                => Pressure.FromPoundsPerInchSecondSquared(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromTechnicalAtmospheres(double)" />
            public Pressure TechnicalAtmospheres
#if NET7_0_OR_GREATER
                => Pressure.FromTechnicalAtmospheres(double.CreateChecked(value));
#else
                => Pressure.FromTechnicalAtmospheres(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromTonnesForcePerSquareCentimeter(double)" />
            public Pressure TonnesForcePerSquareCentimeter
#if NET7_0_OR_GREATER
                => Pressure.FromTonnesForcePerSquareCentimeter(double.CreateChecked(value));
#else
                => Pressure.FromTonnesForcePerSquareCentimeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromTonnesForcePerSquareMeter(double)" />
            public Pressure TonnesForcePerSquareMeter
#if NET7_0_OR_GREATER
                => Pressure.FromTonnesForcePerSquareMeter(double.CreateChecked(value));
#else
                => Pressure.FromTonnesForcePerSquareMeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromTonnesForcePerSquareMillimeter(double)" />
            public Pressure TonnesForcePerSquareMillimeter
#if NET7_0_OR_GREATER
                => Pressure.FromTonnesForcePerSquareMillimeter(double.CreateChecked(value));
#else
                => Pressure.FromTonnesForcePerSquareMillimeter(value.ToDouble(null));
#endif

            /// <inheritdoc cref="Pressure.FromTorrs(double)" />
            public Pressure Torrs
#if NET7_0_OR_GREATER
                => Pressure.FromTorrs(double.CreateChecked(value));
#else
                => Pressure.FromTorrs(value.ToDouble(null));
#endif

        }
    }
}
