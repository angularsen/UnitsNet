//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.NumberExtensions.NumberToVolumeFlow;
using Xunit;

namespace UnitsNet.Tests
{
    public class NumberToVolumeFlowExtensionsTests
    {
        [Fact]
        public void NumberToAcreFeetPerDayTest() =>
            Assert.Equal(VolumeFlow.FromAcreFeetPerDay(2), 2.AcreFeetPerDay);

        [Fact]
        public void NumberToAcreFeetPerHourTest() =>
            Assert.Equal(VolumeFlow.FromAcreFeetPerHour(2), 2.AcreFeetPerHour);

        [Fact]
        public void NumberToAcreFeetPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromAcreFeetPerMinute(2), 2.AcreFeetPerMinute);

        [Fact]
        public void NumberToAcreFeetPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromAcreFeetPerSecond(2), 2.AcreFeetPerSecond);

        [Fact]
        public void NumberToCentilitersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromCentilitersPerDay(2), 2.CentilitersPerDay);

        [Fact]
        public void NumberToCentilitersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromCentilitersPerHour(2), 2.CentilitersPerHour);

        [Fact]
        public void NumberToCentilitersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromCentilitersPerMinute(2), 2.CentilitersPerMinute);

        [Fact]
        public void NumberToCentilitersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromCentilitersPerSecond(2), 2.CentilitersPerSecond);

        [Fact]
        public void NumberToCubicCentimetersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromCubicCentimetersPerMinute(2), 2.CubicCentimetersPerMinute);

        [Fact]
        public void NumberToCubicDecimetersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromCubicDecimetersPerMinute(2), 2.CubicDecimetersPerMinute);

        [Fact]
        public void NumberToCubicFeetPerHourTest() =>
            Assert.Equal(VolumeFlow.FromCubicFeetPerHour(2), 2.CubicFeetPerHour);

        [Fact]
        public void NumberToCubicFeetPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromCubicFeetPerMinute(2), 2.CubicFeetPerMinute);

        [Fact]
        public void NumberToCubicFeetPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromCubicFeetPerSecond(2), 2.CubicFeetPerSecond);

        [Fact]
        public void NumberToCubicMetersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromCubicMetersPerDay(2), 2.CubicMetersPerDay);

        [Fact]
        public void NumberToCubicMetersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromCubicMetersPerHour(2), 2.CubicMetersPerHour);

        [Fact]
        public void NumberToCubicMetersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromCubicMetersPerMinute(2), 2.CubicMetersPerMinute);

        [Fact]
        public void NumberToCubicMetersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromCubicMetersPerSecond(2), 2.CubicMetersPerSecond);

        [Fact]
        public void NumberToCubicMillimetersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromCubicMillimetersPerSecond(2), 2.CubicMillimetersPerSecond);

        [Fact]
        public void NumberToCubicYardsPerDayTest() =>
            Assert.Equal(VolumeFlow.FromCubicYardsPerDay(2), 2.CubicYardsPerDay);

        [Fact]
        public void NumberToCubicYardsPerHourTest() =>
            Assert.Equal(VolumeFlow.FromCubicYardsPerHour(2), 2.CubicYardsPerHour);

        [Fact]
        public void NumberToCubicYardsPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromCubicYardsPerMinute(2), 2.CubicYardsPerMinute);

        [Fact]
        public void NumberToCubicYardsPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromCubicYardsPerSecond(2), 2.CubicYardsPerSecond);

        [Fact]
        public void NumberToDecalitersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromDecalitersPerDay(2), 2.DecalitersPerDay);

        [Fact]
        public void NumberToDecalitersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromDecalitersPerHour(2), 2.DecalitersPerHour);

        [Fact]
        public void NumberToDecalitersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromDecalitersPerMinute(2), 2.DecalitersPerMinute);

        [Fact]
        public void NumberToDecalitersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromDecalitersPerSecond(2), 2.DecalitersPerSecond);

        [Fact]
        public void NumberToDecilitersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromDecilitersPerDay(2), 2.DecilitersPerDay);

        [Fact]
        public void NumberToDecilitersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromDecilitersPerHour(2), 2.DecilitersPerHour);

        [Fact]
        public void NumberToDecilitersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromDecilitersPerMinute(2), 2.DecilitersPerMinute);

        [Fact]
        public void NumberToDecilitersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromDecilitersPerSecond(2), 2.DecilitersPerSecond);

        [Fact]
        public void NumberToHectolitersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromHectolitersPerDay(2), 2.HectolitersPerDay);

        [Fact]
        public void NumberToHectolitersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromHectolitersPerHour(2), 2.HectolitersPerHour);

        [Fact]
        public void NumberToHectolitersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromHectolitersPerMinute(2), 2.HectolitersPerMinute);

        [Fact]
        public void NumberToHectolitersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromHectolitersPerSecond(2), 2.HectolitersPerSecond);

        [Fact]
        public void NumberToKilolitersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromKilolitersPerDay(2), 2.KilolitersPerDay);

        [Fact]
        public void NumberToKilolitersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromKilolitersPerHour(2), 2.KilolitersPerHour);

        [Fact]
        public void NumberToKilolitersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromKilolitersPerMinute(2), 2.KilolitersPerMinute);

        [Fact]
        public void NumberToKilolitersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromKilolitersPerSecond(2), 2.KilolitersPerSecond);

        [Fact]
        public void NumberToKilousGallonsPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromKilousGallonsPerMinute(2), 2.KilousGallonsPerMinute);

        [Fact]
        public void NumberToLitersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromLitersPerDay(2), 2.LitersPerDay);

        [Fact]
        public void NumberToLitersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromLitersPerHour(2), 2.LitersPerHour);

        [Fact]
        public void NumberToLitersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromLitersPerMinute(2), 2.LitersPerMinute);

        [Fact]
        public void NumberToLitersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromLitersPerSecond(2), 2.LitersPerSecond);

        [Fact]
        public void NumberToMegalitersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromMegalitersPerDay(2), 2.MegalitersPerDay);

        [Fact]
        public void NumberToMegalitersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromMegalitersPerHour(2), 2.MegalitersPerHour);

        [Fact]
        public void NumberToMegalitersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromMegalitersPerMinute(2), 2.MegalitersPerMinute);

        [Fact]
        public void NumberToMegalitersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromMegalitersPerSecond(2), 2.MegalitersPerSecond);

        [Fact]
        public void NumberToMegaukGallonsPerDayTest() =>
            Assert.Equal(VolumeFlow.FromMegaukGallonsPerDay(2), 2.MegaukGallonsPerDay);

        [Fact]
        public void NumberToMegaukGallonsPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromMegaukGallonsPerSecond(2), 2.MegaukGallonsPerSecond);

        [Fact]
        public void NumberToMegausGallonsPerDayTest() =>
            Assert.Equal(VolumeFlow.FromMegausGallonsPerDay(2), 2.MegausGallonsPerDay);

        [Fact]
        public void NumberToMicrolitersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromMicrolitersPerDay(2), 2.MicrolitersPerDay);

        [Fact]
        public void NumberToMicrolitersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromMicrolitersPerHour(2), 2.MicrolitersPerHour);

        [Fact]
        public void NumberToMicrolitersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromMicrolitersPerMinute(2), 2.MicrolitersPerMinute);

        [Fact]
        public void NumberToMicrolitersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromMicrolitersPerSecond(2), 2.MicrolitersPerSecond);

        [Fact]
        public void NumberToMillilitersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromMillilitersPerDay(2), 2.MillilitersPerDay);

        [Fact]
        public void NumberToMillilitersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromMillilitersPerHour(2), 2.MillilitersPerHour);

        [Fact]
        public void NumberToMillilitersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromMillilitersPerMinute(2), 2.MillilitersPerMinute);

        [Fact]
        public void NumberToMillilitersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromMillilitersPerSecond(2), 2.MillilitersPerSecond);

        [Fact]
        public void NumberToMillionUsGallonsPerDayTest() =>
            Assert.Equal(VolumeFlow.FromMillionUsGallonsPerDay(2), 2.MillionUsGallonsPerDay);

        [Fact]
        public void NumberToNanolitersPerDayTest() =>
            Assert.Equal(VolumeFlow.FromNanolitersPerDay(2), 2.NanolitersPerDay);

        [Fact]
        public void NumberToNanolitersPerHourTest() =>
            Assert.Equal(VolumeFlow.FromNanolitersPerHour(2), 2.NanolitersPerHour);

        [Fact]
        public void NumberToNanolitersPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromNanolitersPerMinute(2), 2.NanolitersPerMinute);

        [Fact]
        public void NumberToNanolitersPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromNanolitersPerSecond(2), 2.NanolitersPerSecond);

        [Fact]
        public void NumberToOilBarrelsPerDayTest() =>
            Assert.Equal(VolumeFlow.FromOilBarrelsPerDay(2), 2.OilBarrelsPerDay);

        [Fact]
        public void NumberToOilBarrelsPerHourTest() =>
            Assert.Equal(VolumeFlow.FromOilBarrelsPerHour(2), 2.OilBarrelsPerHour);

        [Fact]
        public void NumberToOilBarrelsPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromOilBarrelsPerMinute(2), 2.OilBarrelsPerMinute);

        [Fact]
        public void NumberToOilBarrelsPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromOilBarrelsPerSecond(2), 2.OilBarrelsPerSecond);

        [Fact]
        public void NumberToUkGallonsPerDayTest() =>
            Assert.Equal(VolumeFlow.FromUkGallonsPerDay(2), 2.UkGallonsPerDay);

        [Fact]
        public void NumberToUkGallonsPerHourTest() =>
            Assert.Equal(VolumeFlow.FromUkGallonsPerHour(2), 2.UkGallonsPerHour);

        [Fact]
        public void NumberToUkGallonsPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromUkGallonsPerMinute(2), 2.UkGallonsPerMinute);

        [Fact]
        public void NumberToUkGallonsPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromUkGallonsPerSecond(2), 2.UkGallonsPerSecond);

        [Fact]
        public void NumberToUsGallonsPerDayTest() =>
            Assert.Equal(VolumeFlow.FromUsGallonsPerDay(2), 2.UsGallonsPerDay);

        [Fact]
        public void NumberToUsGallonsPerHourTest() =>
            Assert.Equal(VolumeFlow.FromUsGallonsPerHour(2), 2.UsGallonsPerHour);

        [Fact]
        public void NumberToUsGallonsPerMinuteTest() =>
            Assert.Equal(VolumeFlow.FromUsGallonsPerMinute(2), 2.UsGallonsPerMinute);

        [Fact]
        public void NumberToUsGallonsPerSecondTest() =>
            Assert.Equal(VolumeFlow.FromUsGallonsPerSecond(2), 2.UsGallonsPerSecond);

    }
}
