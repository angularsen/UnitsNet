//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#if NET7_0_OR_GREATER
using System.Numerics;
#endif

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToMassConcentration
{
    /// <summary>
    /// A number to MassConcentration Extensions
    /// </summary>
    public static class NumberToMassConcentrationExtensions
    {
#pragma warning disable CS1591
        extension<T>(T value)
#pragma warning restore CS1591
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#else
            , IConvertible
#endif
        {
            /// <inheritdoc cref="MassConcentration.FromCentigramsPerDeciliter(QuantityValue)" />
            public MassConcentration CentigramsPerDeciliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromCentigramsPerDeciliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromCentigramsPerDeciliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromCentigramsPerLiter(QuantityValue)" />
            public MassConcentration CentigramsPerLiter
#if NET7_0_OR_GREATER
                => MassConcentration.FromCentigramsPerLiter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromCentigramsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromCentigramsPerMicroliter(QuantityValue)" />
            public MassConcentration CentigramsPerMicroliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromCentigramsPerMicroliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromCentigramsPerMicroliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromCentigramsPerMilliliter(QuantityValue)" />
            public MassConcentration CentigramsPerMilliliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromCentigramsPerMilliliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromCentigramsPerMilliliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromDecigramsPerDeciliter(QuantityValue)" />
            public MassConcentration DecigramsPerDeciliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromDecigramsPerDeciliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromDecigramsPerDeciliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromDecigramsPerLiter(QuantityValue)" />
            public MassConcentration DecigramsPerLiter
#if NET7_0_OR_GREATER
                => MassConcentration.FromDecigramsPerLiter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromDecigramsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromDecigramsPerMicroliter(QuantityValue)" />
            public MassConcentration DecigramsPerMicroliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromDecigramsPerMicroliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromDecigramsPerMicroliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromDecigramsPerMilliliter(QuantityValue)" />
            public MassConcentration DecigramsPerMilliliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromDecigramsPerMilliliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromDecigramsPerMilliliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromGramsPerCubicCentimeter(QuantityValue)" />
            public MassConcentration GramsPerCubicCentimeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromGramsPerCubicCentimeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromGramsPerCubicCentimeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromGramsPerCubicMeter(QuantityValue)" />
            public MassConcentration GramsPerCubicMeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromGramsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromGramsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromGramsPerCubicMillimeter(QuantityValue)" />
            public MassConcentration GramsPerCubicMillimeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromGramsPerCubicMillimeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromGramsPerCubicMillimeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromGramsPerDeciliter(QuantityValue)" />
            public MassConcentration GramsPerDeciliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromGramsPerDeciliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromGramsPerDeciliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromGramsPerLiter(QuantityValue)" />
            public MassConcentration GramsPerLiter
#if NET7_0_OR_GREATER
                => MassConcentration.FromGramsPerLiter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromGramsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromGramsPerMicroliter(QuantityValue)" />
            public MassConcentration GramsPerMicroliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromGramsPerMicroliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromGramsPerMicroliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromGramsPerMilliliter(QuantityValue)" />
            public MassConcentration GramsPerMilliliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromGramsPerMilliliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromGramsPerMilliliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromKilogramsPerCubicCentimeter(QuantityValue)" />
            public MassConcentration KilogramsPerCubicCentimeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromKilogramsPerCubicCentimeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromKilogramsPerCubicCentimeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromKilogramsPerCubicMeter(QuantityValue)" />
            public MassConcentration KilogramsPerCubicMeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromKilogramsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromKilogramsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromKilogramsPerCubicMillimeter(QuantityValue)" />
            public MassConcentration KilogramsPerCubicMillimeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromKilogramsPerCubicMillimeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromKilogramsPerCubicMillimeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromKilogramsPerLiter(QuantityValue)" />
            public MassConcentration KilogramsPerLiter
#if NET7_0_OR_GREATER
                => MassConcentration.FromKilogramsPerLiter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromKilogramsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromKilopoundsPerCubicFoot(QuantityValue)" />
            public MassConcentration KilopoundsPerCubicFoot
#if NET7_0_OR_GREATER
                => MassConcentration.FromKilopoundsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromKilopoundsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromKilopoundsPerCubicInch(QuantityValue)" />
            public MassConcentration KilopoundsPerCubicInch
#if NET7_0_OR_GREATER
                => MassConcentration.FromKilopoundsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromKilopoundsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromMicrogramsPerCubicMeter(QuantityValue)" />
            public MassConcentration MicrogramsPerCubicMeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromMicrogramsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromMicrogramsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromMicrogramsPerDeciliter(QuantityValue)" />
            public MassConcentration MicrogramsPerDeciliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromMicrogramsPerDeciliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromMicrogramsPerDeciliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromMicrogramsPerLiter(QuantityValue)" />
            public MassConcentration MicrogramsPerLiter
#if NET7_0_OR_GREATER
                => MassConcentration.FromMicrogramsPerLiter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromMicrogramsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromMicrogramsPerMicroliter(QuantityValue)" />
            public MassConcentration MicrogramsPerMicroliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromMicrogramsPerMicroliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromMicrogramsPerMicroliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromMicrogramsPerMilliliter(QuantityValue)" />
            public MassConcentration MicrogramsPerMilliliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromMicrogramsPerMilliliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromMicrogramsPerMilliliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromMilligramsPerCubicMeter(QuantityValue)" />
            public MassConcentration MilligramsPerCubicMeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromMilligramsPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromMilligramsPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromMilligramsPerDeciliter(QuantityValue)" />
            public MassConcentration MilligramsPerDeciliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromMilligramsPerDeciliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromMilligramsPerDeciliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromMilligramsPerLiter(QuantityValue)" />
            public MassConcentration MilligramsPerLiter
#if NET7_0_OR_GREATER
                => MassConcentration.FromMilligramsPerLiter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromMilligramsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromMilligramsPerMicroliter(QuantityValue)" />
            public MassConcentration MilligramsPerMicroliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromMilligramsPerMicroliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromMilligramsPerMicroliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromMilligramsPerMilliliter(QuantityValue)" />
            public MassConcentration MilligramsPerMilliliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromMilligramsPerMilliliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromMilligramsPerMilliliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromNanogramsPerDeciliter(QuantityValue)" />
            public MassConcentration NanogramsPerDeciliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromNanogramsPerDeciliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromNanogramsPerDeciliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromNanogramsPerLiter(QuantityValue)" />
            public MassConcentration NanogramsPerLiter
#if NET7_0_OR_GREATER
                => MassConcentration.FromNanogramsPerLiter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromNanogramsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromNanogramsPerMicroliter(QuantityValue)" />
            public MassConcentration NanogramsPerMicroliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromNanogramsPerMicroliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromNanogramsPerMicroliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromNanogramsPerMilliliter(QuantityValue)" />
            public MassConcentration NanogramsPerMilliliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromNanogramsPerMilliliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromNanogramsPerMilliliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromOuncesPerImperialGallon(QuantityValue)" />
            public MassConcentration OuncesPerImperialGallon
#if NET7_0_OR_GREATER
                => MassConcentration.FromOuncesPerImperialGallon(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromOuncesPerImperialGallon(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromOuncesPerUSGallon(QuantityValue)" />
            public MassConcentration OuncesPerUSGallon
#if NET7_0_OR_GREATER
                => MassConcentration.FromOuncesPerUSGallon(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromOuncesPerUSGallon(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromPicogramsPerDeciliter(QuantityValue)" />
            public MassConcentration PicogramsPerDeciliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromPicogramsPerDeciliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromPicogramsPerDeciliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromPicogramsPerLiter(QuantityValue)" />
            public MassConcentration PicogramsPerLiter
#if NET7_0_OR_GREATER
                => MassConcentration.FromPicogramsPerLiter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromPicogramsPerLiter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromPicogramsPerMicroliter(QuantityValue)" />
            public MassConcentration PicogramsPerMicroliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromPicogramsPerMicroliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromPicogramsPerMicroliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromPicogramsPerMilliliter(QuantityValue)" />
            public MassConcentration PicogramsPerMilliliter
#if NET7_0_OR_GREATER
                => MassConcentration.FromPicogramsPerMilliliter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromPicogramsPerMilliliter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromPoundsPerCubicFoot(QuantityValue)" />
            public MassConcentration PoundsPerCubicFoot
#if NET7_0_OR_GREATER
                => MassConcentration.FromPoundsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromPoundsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromPoundsPerCubicInch(QuantityValue)" />
            public MassConcentration PoundsPerCubicInch
#if NET7_0_OR_GREATER
                => MassConcentration.FromPoundsPerCubicInch(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromPoundsPerCubicInch(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromPoundsPerImperialGallon(QuantityValue)" />
            public MassConcentration PoundsPerImperialGallon
#if NET7_0_OR_GREATER
                => MassConcentration.FromPoundsPerImperialGallon(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromPoundsPerImperialGallon(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromPoundsPerUSGallon(QuantityValue)" />
            public MassConcentration PoundsPerUSGallon
#if NET7_0_OR_GREATER
                => MassConcentration.FromPoundsPerUSGallon(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromPoundsPerUSGallon(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromSlugsPerCubicFoot(QuantityValue)" />
            public MassConcentration SlugsPerCubicFoot
#if NET7_0_OR_GREATER
                => MassConcentration.FromSlugsPerCubicFoot(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromSlugsPerCubicFoot(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromTonnesPerCubicCentimeter(QuantityValue)" />
            public MassConcentration TonnesPerCubicCentimeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromTonnesPerCubicCentimeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromTonnesPerCubicCentimeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromTonnesPerCubicMeter(QuantityValue)" />
            public MassConcentration TonnesPerCubicMeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromTonnesPerCubicMeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromTonnesPerCubicMeter(value.ToQuantityValue());
#endif

            /// <inheritdoc cref="MassConcentration.FromTonnesPerCubicMillimeter(QuantityValue)" />
            public MassConcentration TonnesPerCubicMillimeter
#if NET7_0_OR_GREATER
                => MassConcentration.FromTonnesPerCubicMillimeter(QuantityValue.CreateChecked(value));
#else
                => MassConcentration.FromTonnesPerCubicMillimeter(value.ToQuantityValue());
#endif

        }
    }
}
