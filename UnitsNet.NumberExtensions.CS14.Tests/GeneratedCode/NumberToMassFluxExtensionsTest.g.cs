//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.NumberExtensions.NumberToMassFlux;
using Xunit;

namespace UnitsNet.Tests
{
    public class NumberToMassFluxExtensionsTests
    {
        [Fact]
        public void NumberToGramsPerHourPerSquareCentimeterTest() =>
            Assert.Equal(MassFlux.FromGramsPerHourPerSquareCentimeter(2), 2.GramsPerHourPerSquareCentimeter);

        [Fact]
        public void NumberToGramsPerHourPerSquareMeterTest() =>
            Assert.Equal(MassFlux.FromGramsPerHourPerSquareMeter(2), 2.GramsPerHourPerSquareMeter);

        [Fact]
        public void NumberToGramsPerHourPerSquareMillimeterTest() =>
            Assert.Equal(MassFlux.FromGramsPerHourPerSquareMillimeter(2), 2.GramsPerHourPerSquareMillimeter);

        [Fact]
        public void NumberToGramsPerSecondPerSquareCentimeterTest() =>
            Assert.Equal(MassFlux.FromGramsPerSecondPerSquareCentimeter(2), 2.GramsPerSecondPerSquareCentimeter);

        [Fact]
        public void NumberToGramsPerSecondPerSquareMeterTest() =>
            Assert.Equal(MassFlux.FromGramsPerSecondPerSquareMeter(2), 2.GramsPerSecondPerSquareMeter);

        [Fact]
        public void NumberToGramsPerSecondPerSquareMillimeterTest() =>
            Assert.Equal(MassFlux.FromGramsPerSecondPerSquareMillimeter(2), 2.GramsPerSecondPerSquareMillimeter);

        [Fact]
        public void NumberToKilogramsPerHourPerSquareCentimeterTest() =>
            Assert.Equal(MassFlux.FromKilogramsPerHourPerSquareCentimeter(2), 2.KilogramsPerHourPerSquareCentimeter);

        [Fact]
        public void NumberToKilogramsPerHourPerSquareMeterTest() =>
            Assert.Equal(MassFlux.FromKilogramsPerHourPerSquareMeter(2), 2.KilogramsPerHourPerSquareMeter);

        [Fact]
        public void NumberToKilogramsPerHourPerSquareMillimeterTest() =>
            Assert.Equal(MassFlux.FromKilogramsPerHourPerSquareMillimeter(2), 2.KilogramsPerHourPerSquareMillimeter);

        [Fact]
        public void NumberToKilogramsPerSecondPerSquareCentimeterTest() =>
            Assert.Equal(MassFlux.FromKilogramsPerSecondPerSquareCentimeter(2), 2.KilogramsPerSecondPerSquareCentimeter);

        [Fact]
        public void NumberToKilogramsPerSecondPerSquareMeterTest() =>
            Assert.Equal(MassFlux.FromKilogramsPerSecondPerSquareMeter(2), 2.KilogramsPerSecondPerSquareMeter);

        [Fact]
        public void NumberToKilogramsPerSecondPerSquareMillimeterTest() =>
            Assert.Equal(MassFlux.FromKilogramsPerSecondPerSquareMillimeter(2), 2.KilogramsPerSecondPerSquareMillimeter);

    }
}
