//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#if NET7_0_OR_GREATER
using System.Numerics;
#endif

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToDoseAreaProduct
{
    /// <summary>
    /// A number to DoseAreaProduct Extensions
    /// </summary>
    public static class NumberToDoseAreaProductExtensions
    {
#pragma warning disable CS1591
        extension<T>(T value)
#pragma warning restore CS1591
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#else
            , IConvertible
#endif
        {
            /// <inheritdoc cref="DoseAreaProduct.FromCentigraySquareCentimeters(double)" />
            public DoseAreaProduct CentigraySquareCentimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromCentigraySquareCentimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromCentigraySquareCentimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromCentigraySquareDecimeters(double)" />
            public DoseAreaProduct CentigraySquareDecimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromCentigraySquareDecimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromCentigraySquareDecimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromCentigraySquareMeters(double)" />
            public DoseAreaProduct CentigraySquareMeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromCentigraySquareMeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromCentigraySquareMeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromCentigraySquareMicrometers(double)" />
            public DoseAreaProduct CentigraySquareMicrometers
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromCentigraySquareMicrometers(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromCentigraySquareMicrometers(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromCentigraySquareMillimeters(double)" />
            public DoseAreaProduct CentigraySquareMillimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromCentigraySquareMillimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromCentigraySquareMillimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromDecigraySquareCentimeters(double)" />
            public DoseAreaProduct DecigraySquareCentimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromDecigraySquareCentimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromDecigraySquareCentimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromDecigraySquareDecimeters(double)" />
            public DoseAreaProduct DecigraySquareDecimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromDecigraySquareDecimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromDecigraySquareDecimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromDecigraySquareMeters(double)" />
            public DoseAreaProduct DecigraySquareMeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromDecigraySquareMeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromDecigraySquareMeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromDecigraySquareMicrometers(double)" />
            public DoseAreaProduct DecigraySquareMicrometers
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromDecigraySquareMicrometers(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromDecigraySquareMicrometers(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromDecigraySquareMillimeters(double)" />
            public DoseAreaProduct DecigraySquareMillimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromDecigraySquareMillimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromDecigraySquareMillimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromGraySquareCentimeters(double)" />
            public DoseAreaProduct GraySquareCentimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromGraySquareCentimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromGraySquareCentimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromGraySquareDecimeters(double)" />
            public DoseAreaProduct GraySquareDecimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromGraySquareDecimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromGraySquareDecimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromGraySquareMeters(double)" />
            public DoseAreaProduct GraySquareMeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromGraySquareMeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromGraySquareMeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromGraySquareMicrometers(double)" />
            public DoseAreaProduct GraySquareMicrometers
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromGraySquareMicrometers(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromGraySquareMicrometers(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromGraySquareMillimeters(double)" />
            public DoseAreaProduct GraySquareMillimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromGraySquareMillimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromGraySquareMillimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromMicrograySquareCentimeters(double)" />
            public DoseAreaProduct MicrograySquareCentimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromMicrograySquareCentimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromMicrograySquareCentimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromMicrograySquareDecimeters(double)" />
            public DoseAreaProduct MicrograySquareDecimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromMicrograySquareDecimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromMicrograySquareDecimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromMicrograySquareMeters(double)" />
            public DoseAreaProduct MicrograySquareMeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromMicrograySquareMeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromMicrograySquareMeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromMicrograySquareMicrometers(double)" />
            public DoseAreaProduct MicrograySquareMicrometers
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromMicrograySquareMicrometers(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromMicrograySquareMicrometers(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromMicrograySquareMillimeters(double)" />
            public DoseAreaProduct MicrograySquareMillimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromMicrograySquareMillimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromMicrograySquareMillimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromMilligraySquareCentimeters(double)" />
            public DoseAreaProduct MilligraySquareCentimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromMilligraySquareCentimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromMilligraySquareCentimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromMilligraySquareDecimeters(double)" />
            public DoseAreaProduct MilligraySquareDecimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromMilligraySquareDecimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromMilligraySquareDecimeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromMilligraySquareMeters(double)" />
            public DoseAreaProduct MilligraySquareMeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromMilligraySquareMeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromMilligraySquareMeters(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromMilligraySquareMicrometers(double)" />
            public DoseAreaProduct MilligraySquareMicrometers
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromMilligraySquareMicrometers(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromMilligraySquareMicrometers(value.ToDouble(null));
#endif

            /// <inheritdoc cref="DoseAreaProduct.FromMilligraySquareMillimeters(double)" />
            public DoseAreaProduct MilligraySquareMillimeters
#if NET7_0_OR_GREATER
                => DoseAreaProduct.FromMilligraySquareMillimeters(double.CreateChecked(value));
#else
                => DoseAreaProduct.FromMilligraySquareMillimeters(value.ToDouble(null));
#endif

        }
    }
}
