pr: none
trigger:
  branches:
    include:
      - master
      - release/*
      - maintenance/*
  paths:
    exclude:
      - '**/*.png'
      - '**/*.md'

pool:
  vmImage: windows-latest

variables:
- group: common

stages:
- stage: Build
  displayName: Build & test
  jobs:
  - job: Build
    displayName: Build & test
    steps:
    - checkout: self
      fetchDepth: 1
      clean: false
      lfs: true
      submodules: false
      fetchTags: false

    - task: InstallNanoMSBuildComponents@1
      displayName: Install .NET nanoFramework MSBuild components

    - task: PowerShell@2
      displayName: 'Build, test, pack'
      inputs:
        filePath: 'Build/build.ps1'
        arguments: '-IncludeNanoFramework'
        failOnStderr: true
        showWarnings: true
        pwsh: true
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: PowerShell@2
      displayName: Upload to codecov.io
      env:
        CODECOV_TOKEN: $(CODECOV_TOKEN)
      inputs:
        targetType: 'inline'
        script: |
          Write-Host -Foreground Green "Downloading codecov binaries..."

          Invoke-WebRequest -Uri https://uploader.codecov.io/verification.gpg -OutFile codecov.asc
          gpg.exe --import codecov.asc

          Invoke-WebRequest -Uri https://uploader.codecov.io/latest/windows/codecov.exe -Outfile codecov.exe
          Invoke-WebRequest -Uri https://uploader.codecov.io/latest/windows/codecov.exe.SHA256SUM -Outfile codecov.exe.SHA256SUM
          Invoke-WebRequest -Uri https://uploader.codecov.io/latest/windows/codecov.exe.SHA256SUM.sig -Outfile codecov.exe.SHA256SUM.sig

          gpg.exe --verify codecov.exe.SHA256SUM.sig codecov.exe.SHA256SUM
          If ($(Compare-Object -ReferenceObject  $(($(certUtil -hashfile codecov.exe SHA256)[1], "codecov.exe") -join "  ") -DifferenceObject $(Get-Content codecov.exe.SHA256SUM)).length -eq 0) { echo "SHASUM verified" } Else {exit 1}

          Write-Host -Foreground Green "Uploading to codecov..."

          .\codecov.exe --dir "Artifacts/Coverage" -t "$env:CODECOV_TOKEN" --build "$(Build.BuildNumber)"

          Write-Host -Foreground Green "âœ… Uploaded to codecov."
        pwsh: true

    - publish: $(Build.SourcesDirectory)/Artifacts
      displayName: 'Publish Artifacts'
      artifact: 'Artifacts'

    - task: CopyFiles@2
      displayName: Copy nugets to staging
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/Artifacts'
        Contents: |
          **/*.nupkg
          **/*.snupkg
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        flattenFolders: true
        preserveTimestamp: true
        retryCount: '3'
        ignoreMakeDirErrors: true

    - task: PublishPipelineArtifact@1
      displayName: Upload nugets to pipeline
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'nugets'
        publishLocation: 'pipeline'

- stage: Publish
  dependsOn: Build
  jobs:
  - deployment: Publish
    displayName: Publish nugets
    environment: 'Publish'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: Download nugets from pipeline
            inputs:
              buildType: 'current'
              artifactName: 'nugets'
              targetPath: '$(Build.ArtifactStagingDirectory)'

          - task: Bash@3
            displayName: 'Push to nuget.org'
            env:
              NUGET_ORG_APIKEY: '$(NUGET_ORG_APIKEY)'
            inputs:
              targetType: 'inline'
              script: 'dotnet nuget push "*.nupkg" --skip-duplicate --api-key $NUGET_ORG_APIKEY --source https://api.nuget.org/v3/index.json'
              workingDirectory: '$(Build.ArtifactStagingDirectory)'

          - task: NuGetCommand@2
            displayName: Push to internal NuGet feed
            inputs:
              command: 'push'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: 'fee4c64f-3e49-4618-9ea4-5a3167257c37/989275f4-a952-4abd-ae82-2e7a0cb97b9b'
              allowPackageConflicts: true
